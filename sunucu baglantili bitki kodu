#include <ESP8266Firebase.h>
#include <Arduino.h>
#include <ESP8266WiFi.h>
#include <Firebase_ESP_Client.h>

//Veritabanına düzgün bağlanmak için gerekli olan ilaveler
#include "addons/TokenHelper.h"
#include "addons/RTDBHelper.h"

// Ağ bilgilerinizi
#define WIFI_SSID "**********"
#define WIFI_PASSWORD "**************"

// Firebase proje API Key'i 
#define API_KEY "**************************"

// Veritabanı URL'si
#define DATABASE_URL "*******************"  

//Bir Firebase veri objesi 
FirebaseData fbdo;
//yetki ve ayar nesneleri 
FirebaseAuth auth;
FirebaseConfig config;
//gerekli değişken tanımları
unsigned long sendDataPrevMillis = 0;
unsigned long getDataPrevMillis = 0;
int count = 1;
bool signupOK = false;
int bitkigelenveri=0;
int topraksensor=0;
int oncekideger=0;
 int A0pin =0;
 int D0pin=16;

void setup() {
  Serial.begin(115200);
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  Serial.print("Ağa bağlanıyor");
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(300);
  }
  Serial.println("Bağlandı. IP Adresi: ");
  
  config.api_key = API_KEY;
  config.database_url = DATABASE_URL;

  if (Firebase.signUp(&config, &auth, "", "")) {
    Serial.println("Firebase kayıt başarılı");
    signupOK = true;
  } else {
    Serial.println("Firebase kayıt başarısız");
    Serial.printf("%s\n", config.signer.signupError.message.c_str());
  }

  config.token_status_callback = tokenStatusCallback;
  Firebase.begin(&config, &auth);
  Firebase.reconnectWiFi(true);

  pinMode(A0pin, INPUT);
  pinMode(D0pin, OUTPUT);
  digitalWrite(D0pin,HIGH);
}

void loop() {
  topraksensor = analogRead(A0pin);
 
    if (Firebase.ready() && signupOK && (millis() - getDataPrevMillis > 10000 || getDataPrevMillis == 0)) {
    getDataPrevMillis = millis();
    if (Firebase.RTDB.getInt(&fbdo, "bitkinem/oncekideger")) {
      if (fbdo.dataType() == "int") {
         oncekideger= fbdo.intData();
      
      }
    }
    else {
      
    }
    }



  if (Firebase.ready() && signupOK && (millis() - sendDataPrevMillis > 10000 || sendDataPrevMillis == 0)) {
    sendDataPrevMillis = millis();
     
    if (Firebase.RTDB.setInt(&fbdo, "bitkinem/topraknemi", topraksensor)) {
     
    }
    else {
      Serial.println("Firebase'e yazılırken hata oluştu");
      Serial.println("HATA SEBEBİ: " + fbdo.errorReason());
    }
  }



  if (Firebase.ready() && signupOK && (millis() - getDataPrevMillis > 10000 || getDataPrevMillis == 0)) {
    getDataPrevMillis = millis();
    if (Firebase.RTDB.getInt(&fbdo, "bitkinem/bitkigelenveri")) {
      if (fbdo.dataType() == "int") {
        bitkigelenveri = fbdo.intData();
        Serial.println("Firebase'den okundu: " + String(bitkigelenveri));
      }
    }
    else {
      Serial.println("Firebase'den okunurken hata oluştu");
      Serial.println("HATA SEBEBİ: " + fbdo.errorReason());
    }
int zaman = bitkigelenveri - oncekideger;
if (zaman > 10) {
  Serial.println("Motor çalıştırıldı");
  digitalWrite(D0pin, LOW);
  delay(600 * zaman);
  digitalWrite(D0pin, HIGH);
  delay(600 * zaman);
  Serial.println("Motor durdu");
  oncekideger = bitkigelenveri;
}

  }

// Firebase işlemi
if (Firebase.ready() && signupOK && (millis() - sendDataPrevMillis > 10000 || sendDataPrevMillis == 0)) {
  sendDataPrevMillis = millis();
  
  // Firebase verisini güncelle
  if (Firebase.RTDB.setInt(&fbdo, "bitkinem/oncekideger", oncekideger)) {
    Serial.println("Firebase'e yazıldı: " + String(oncekideger));
  } else {
    Serial.println("Firebase'e yazılırken hata oluştu");
    Serial.println("HATA SEBEBİ: " + fbdo.errorReason());
  }
}

 
}
